{"version":3,"sources":["components/todo/TodoCard.js","components/todo/TodoCardList.js","components/layout/Title.js","components/layout/NavBar.js","components/completed/CompletedListItem.js","components/completed/CompletedList.js","components/layout/TodoButton.js","components/layout/Modal.js","components/completed/Search.js","components/completed/SearchItem.js","components/todo/allDone.js","App.js","serviceWorker.js","index.js"],"names":["TodoCard","isCompleted","display","props","todo","completed","this","id","title","style","className","description","author","onClick","deleteCard","bind","completeCard","Component","TodoCardList","todos","map","key","Title","NavBar","href","CompletedListItem","completedTodo","dateObj","Date","getDate","getMonth","getFullYear","CompletedList","completedTodos","TodoButton","openModal","Modal","state","closeModal","setState","onChange","e","target","name","value","onSubmit","preventDefault","addTodo","type","placeholder","maxLength","length","Search","searchFuction","React","allDone","App","newTodo","uuid","console","log","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kOA+BeA,EA5Bf,4MACIC,YAAc,WACV,MAAO,CACHC,QAAS,EAAKC,MAAMC,KAAKC,UAAY,OAAS,WAH1D,uDAOc,IAAD,EACeC,KAAKH,MAAMC,KAAxBG,EADF,EACEA,GAAIC,EADN,EACMA,MACX,OACI,yBAAKC,MAAOH,KAAKL,cAAeS,UAAU,WAAWH,GAAID,KAAKH,MAAMC,KAAKG,IACrE,6BACI,4BAAKD,KAAKH,MAAMC,KAAKI,OACrB,2BAAIF,KAAKH,MAAMC,KAAKO,aACpB,4BAAKL,KAAKH,MAAMC,KAAKQ,QACrB,4BAAQC,QAASP,KAAKH,MAAMW,WAAWC,KAAKT,KAAMC,EAAIC,IAAtD,UACA,4BAAQK,QAASP,KAAKH,MAAMa,aAAaD,KAAKT,KAAMC,EAAIC,IAAxD,kBAhBpB,GAA8BS,aCYfC,EAZf,uKAGa,IAAD,OACJ,OAAOZ,KAAKH,MAAMgB,MAAMC,KAAI,SAAChB,GAAD,OAExB,kBAAC,EAAD,CAAUiB,IAAKjB,EAAKG,GAAIH,KAAMA,EAAMU,WAAY,EAAKX,MAAMW,WAAYE,aAAc,EAAKb,MAAMa,sBAN5G,GAAkCC,aCUnBK,EAXf,uKAEQ,OACI,gCACI,oCACA,wBAAIf,GAAG,QAAP,kBALhB,GAA2BU,aCeZM,EAff,uKAGQ,OACI,6BACI,iCACC,uBAAGC,KAAK,0BAAR,UACD,kCACA,uBAAGA,KAAK,wBAAR,cARhB,GAA4BP,aCoBbQ,EApBf,4MACIxB,YAAc,WACV,MAAO,CACHC,QAAS,EAAKC,MAAMuB,cAAcrB,UAAY,GAAK,SAH/D,uDAQQ,IAAIsB,EAAU,IAAIC,KAClB,OACI,wBAAInB,MAAOH,KAAKL,eACZ,4BAAKK,KAAKH,MAAMuB,cAAclB,OAC9B,4BAAKF,KAAKH,MAAMuB,cAAcd,QAC9B,4BAAKN,KAAKH,MAAMuB,cAAcf,aAC9B,4BAAKgB,EAAQE,UAAY,IAAMF,EAAQG,WAAa,IAAMH,EAAQI,oBAdlF,GAAuCd,aCSxBe,EARf,uKAEQ,OAAO1B,KAAKH,MAAM8B,eAAeb,KAAI,SAACM,GAAD,OACrB,kBAAC,EAAD,CAAmBA,cAAeA,WAH1D,GAAmCT,a,OCOpBiB,EARf,uKAEQ,OACI,4BAAQzB,MAAO,CAACP,QAAS,QAASQ,UAAU,aAAaG,QAASP,KAAKH,MAAMgC,WAA7E,cAHZ,GAAgClB,aC4DjBmB,EA3Df,4MAGIC,MAAQ,CACJnC,QAAS,SACTM,MAAO,GACPG,YAAa,GACbC,OAAQ,IAPhB,EAUI0B,WAAa,WACT,EAAKC,SAAS,CAACrC,QAAS,UAXhC,EAcIiC,UAAY,WACR,EAAKI,SAAS,CAACrC,QAAS,YAfhC,EAkBIsC,SAAW,SAACC,GAAD,OAAO,EAAKF,SAAL,eAAiBE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAlBhE,EAoBIC,SAAW,SAACJ,GACRA,EAAEK,iBACF,EAAK3C,MAAM4C,QAAQ,EAAKV,MAAM7B,MAAO,EAAK6B,MAAM1B,YAAa,EAAK0B,MAAMzB,QACxE,EAAK2B,SAAS,CAAC/B,MAAO,GAAIG,YAAa,GAAIC,OAAQ,MAvB3D,uDA2BQ,OACI,6BACA,yBAAKH,MAAO,CAACP,QAASI,KAAK+B,MAAMnC,SAAUQ,UAAU,QAAQH,GAAG,SAC5D,yBAAKG,UAAU,iBAEX,0BAAMA,UAAU,OAAOG,QAASP,KAAKgC,YAArC,QAEA,0BAAMO,SAAUvC,KAAKuC,UACjB,wCAAoB,6BACpB,2BAAOG,KAAK,OAAOL,KAAK,QAAQM,YAAY,QAAQ1C,GAAG,QAAQqC,MAAOtC,KAAK+B,MAAM7B,MAAOgC,SAAUlC,KAAKkC,WAAkB,6BAAK,6BAE9H,8CAA0B,6BAC1B,2BAAOQ,KAAK,OAAOL,KAAK,cAAcM,YAAY,+BAA+B1C,GAAG,cAAcqC,MAAOtC,KAAK+B,MAAM1B,YAAa6B,SAAUlC,KAAKkC,SAAUU,UAAW5C,KAAKH,MAAM+C,YAChL,6BACK5C,KAAK+B,MAAM1B,YAAYwC,OAD5B,IACqC7C,KAAKH,MAAM+C,WAEhD,6BAEA,yCAAqB,6BACrB,2BAAOF,KAAK,OAAOL,KAAK,SAASM,YAAY,SAAS1C,GAAG,SAASqC,MAAOtC,KAAK+B,MAAMzB,OAAQ4B,SAAUlC,KAAKkC,WAAkB,6BAAK,6BAElI,4BAAQQ,KAAK,SAASJ,MAAM,UAA5B,UAAoD,gCAKhE,kBAAC,EAAD,CAAYT,UAAW7B,KAAK6B,iBArDxC,GAA2BlB,aCeZmC,GChBiBnC,YDChC,uKAEI,OACQ,6BACA,2BAAO+B,KAAK,OAAOC,YAAY,SAAS1C,GAAG,gBACvC,4BAAQA,GAAG,SAASM,QAASP,KAAK+C,eAAlC,eALhB,GAA4BC,IAAMrC,YEWnBsC,EAZf,uKAEQ,IAAIA,EAAU,GAId,OAH+B,IAA5BjD,KAAKH,MAAMgB,MAAMgC,SAChBI,EAAU,4BAGd,2BAAIA,OAPZ,GAA6BtC,a,QCwFduC,EA/Ef,4MAEInB,MAAQ,CACJlB,MAAO,GAGPO,cAAe,IANvB,EAWIqB,QAAU,SAACvC,EAAOG,EAAaC,GAC3B,IAAM6C,EAAU,CAEZlD,GAAImD,cACJlD,QACAG,cACAC,SACAP,WAAW,GAEf,EAAKkC,SAAS,CAACpB,MAAM,GAAD,mBAAM,EAAKkB,MAAMlB,OAAjB,CAAwBsC,OApBpD,EAuBI3C,WAAa,SAACP,EAAIC,GACdmD,QAAQC,IAAI,qBAAuBpD,GACnC,EAAK+B,SAAS,CAAEpB,MAAM,YAAK,EAAKkB,MAAMlB,MAAM0C,QAAO,SAAAzD,GAAI,OAAIA,EAAKG,KAAOA,SAzB/E,EA4BIS,aAAe,SAACT,EAAIC,GAChB,EAAK+B,SAAS,CAAEpB,MAAO,EAAKkB,MAAMlB,MAAMC,KAAI,SAAAhB,GAOxC,OANGA,EAAKG,KAAOA,IACXH,EAAKC,WAAaD,EAAKC,UACvBsD,QAAQC,IAAI,EAAKvB,MAAMlB,OACvBwC,QAAQC,IAAI,uBAAyBpD,GACrC,EAAK+B,SAAS,CAACb,cAAc,GAAD,mBAAM,EAAKW,MAAMX,eAAjB,CAAgCtB,OAEzDA,OAEX,EAAKmC,SAAS,CAAEpB,MAAM,YAAK,EAAKkB,MAAMlB,MAAM0C,QAAO,SAAAzD,GAAI,OAAIA,EAAKG,KAAOA,SAtC/E,uDA0CE,OACE,yBAAKG,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,8BACI,kBAAC,EAAD,CAAOqC,QAASzC,KAAKyC,QAASG,UAAU,OAExC,yBAAK3C,GAAG,WAAWG,UAAU,YAC7B,kBAAC,EAAD,CAASS,MAAOb,KAAK+B,MAAMlB,QAC3B,kBAAC,EAAD,CAAcA,MAAOb,KAAK+B,MAAMlB,MAAOL,WAAYR,KAAKQ,WAAYE,aAAcV,KAAKU,gBAGvF,6BACI,+CACA,kBAAC,EAAD,CAAQG,MAAOb,KAAK+B,MAAMlB,QAC1B,2BAAOZ,GAAG,iBACN,+BACI,4BACI,wBAAIA,GAAG,kBAAP,SACA,wBAAIA,GAAG,mBAAP,UACA,2CACA,+CAEhB,kBAAC,EAAD,CAAe0B,eAAgB3B,KAAK+B,MAAMX,iBAElC,wCAnEpB,GAAyB4B,IAAMrC,WCCX6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMC,a","file":"static/js/main.fe60df25.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoCard extends Component {\r\n    isCompleted = () => {\r\n        return {\r\n            display: this.props.todo.completed ? 'none' : 'inline'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {id, title} = this.props.todo;\r\n        return (\r\n            <div style={this.isCompleted()} className=\"TodoCard\" id={this.props.todo.id}>\r\n                <div>\r\n                    <h5>{this.props.todo.title}</h5>\r\n                    <p>{this.props.todo.description}</p>\r\n                    <h6>{this.props.todo.author}</h6>\r\n                    <button onClick={this.props.deleteCard.bind(this, id, title)}>Delete</button>\r\n                    <button onClick={this.props.completeCard.bind(this, id, title)}>Complete</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//TodoCard PropTypes\r\nTodoCard.propTypes = {\r\n  todo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TodoCard","import React, { Component } from 'react';\r\nimport TodoCard from './TodoCard.js';\r\n\r\nexport class TodoCardList extends Component {\r\n    //TODO: skriv ut \"Jippi! Ingen todos i dag\" nÃ¥r tom\r\n\r\n    render(){\r\n        return this.props.todos.map((todo) => (\r\n       \r\n            <TodoCard key={todo.id} todo={todo} deleteCard={this.props.deleteCard} completeCard={this.props.completeCard}/>\r\n        \r\n        ))\r\n    }\r\n}\r\n\r\nexport default TodoCardList\r\n","import React, { Component } from 'react'\r\n\r\nexport class Title extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1>HIOF</h1>\r\n                <h3 id=\"user\">User user</h3>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title\r\n","import React, { Component } from 'react'\r\n\r\nexport class NavBar extends Component {\r\n    render() {\r\n        //UNSURE WHAT TO PUT HERE SO I JUST PUT A LINK TO GOOGLE\r\n        return (\r\n            <div>\r\n                <nav>\r\n                |<a href=\"https://www.google.com\">Google</a>\r\n                <a>   </a>\r\n                <a href=\"https://www.hiof.no/\">HIOF</a>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Component } from 'react'\r\n\r\nexport class CompletedListItem extends Component {\r\n    isCompleted = () => {\r\n        return {\r\n            display: this.props.completedTodo.completed ? '' : 'none'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var dateObj = new Date();\r\n        return (\r\n            <tr style={this.isCompleted()}>\r\n                <td>{this.props.completedTodo.title}</td>\r\n                <td>{this.props.completedTodo.author}</td>\r\n                <td>{this.props.completedTodo.description}</td>\r\n                <td>{dateObj.getDate() + \".\" + dateObj.getMonth() + \".\" + dateObj.getFullYear()}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompletedListItem","import React, { Component } from 'react'\r\nimport CompletedListItem from './CompletedListItem.js';\r\n\r\nexport class CompletedList extends Component {\r\n    render() {\r\n        return this.props.completedTodos.map((completedTodo) => (\r\n                        <CompletedListItem completedTodo={completedTodo} />  \r\n        ))\r\n    }\r\n}\r\n\r\nexport default CompletedList\r\n","import React, { Component } from 'react'\r\n\r\nexport class TodoButton extends Component {\r\n    render() {\r\n        return (\r\n            <button style={{display: \"flex\"}} className=\"TodoButton\" onClick={this.props.openModal}>Todo +</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoButton","import React, { Component } from 'react';\r\nimport TodoButton from './TodoButton';\r\n\r\nexport class Modal extends Component {\r\n    // TODO: Max 50 letters on \"Description\" - (State)\r\n\r\n    state = {\r\n        display: \"inline\",\r\n        title: '',\r\n        description: '',\r\n        author: ''\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({display: \"none\"});\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({display: \"inline\"});\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title, this.state.description, this.state.author);\r\n        this.setState({title: '', description: '', author: ''});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div style={{display: this.state.display}} className=\"Modal\" id=\"Modal\">\r\n                <div className=\"Modal-Innhold\">\r\n\r\n                    <span className=\"lukk\" onClick={this.closeModal}>&times;</span>\r\n\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <label>Title</label><br/>\r\n                        <input type=\"text\" name=\"title\" placeholder=\"Title\" id=\"title\" value={this.state.title} onChange={this.onChange}></input><br/><br/>\r\n\r\n                        <label>Description</label><br/>\r\n                        <input type=\"text\" name=\"description\" placeholder=\"Description (max 50 letters)\" id=\"description\" value={this.state.description} onChange={this.onChange} maxLength={this.props.maxLength}></input>\r\n                        <div>\r\n                            {this.state.description.length}/{this.props.maxLength}\r\n                        </div>\r\n                        <br/>\r\n                        \r\n                        <label>Author</label><br/>\r\n                        <input type=\"text\" name=\"author\" placeholder=\"Author\" id=\"author\" value={this.state.author} onChange={this.onChange}></input><br/><br/>\r\n\r\n                        <button type=\"submit\" value=\"submit\">Create</button><br/>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n            <TodoButton openModal={this.openModal}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport SearchItem from './SearchItem'\r\n\r\nexport class Search extends React.Component{\r\n    render() {\r\n    return /*this.props.todos.map((todo) =>*/(\r\n            <div>\r\n            <input type=\"text\" placeholder=\"Search\" id=\"searchQuery\"/>\r\n                <button id=\"search\" onClick={this.searchFuction}>Search</button>\r\n            {\r\n            //COULDNT GET SEARCH TO WORK\r\n            //<SearchItem todo={todo}/>\r\n            }\r\n            </div>\r\n        )//);\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react'\r\nvar srcQry;\r\nexport class SearchItem extends Component {\r\n    searchFuction = () => (\r\n        srcQry = document.getElementById(\"search\").value\r\n        /*if(todo.title = srcQry){\r\n            alert(srcQry + \" was found.\\n Description: \" + todo.description + \"\\nAuthor: \" + todo.author)\r\n        }\r\n        else{\r\n            alert(\"Title was not found\");\r\n        }*/\r\n    )\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchItem\r\n","import React, { Component } from 'react'\r\n\r\nexport class allDone extends Component {\r\n    render() {\r\n        var allDone = \"\";\r\n        if(this.props.todos.length === 0){\r\n            allDone = \"Jippi! Ingen todos i dag\"\r\n        }\r\n        return (\r\n        <p>{allDone}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default allDone\r\n","import React from 'react';\r\nimport './main.css';\r\nimport TodoCardList from './components/todo/TodoCardList';\r\nimport Title from './components/layout/Title.js';\r\nimport Navbar from './components/layout/NavBar.js';\r\nimport CompletedList from './components/completed/CompletedList.js';\r\nimport Modal from './components/layout/Modal.js';\r\nimport Search from './components/completed/Search.js';\r\nimport AllDone from './components/todo/allDone.js';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nexport class App extends React.Component {\r\n\r\n    state = {\r\n        todos: [\r\n        \r\n        ],\r\n        completedTodo: [\r\n            \r\n        ]\r\n    }\r\n\r\n    addTodo = (title, description, author) =>{\r\n        const newTodo = {\r\n            //uuid() generates a unique ID for each TodoCard, this is to prevent a bug i ran into earlier where the completed todos would be overwritten\r\n            id: uuid(),\r\n            title,\r\n            description,\r\n            author,\r\n            completed: false\r\n        }\r\n        this.setState({todos: [...this.state.todos, newTodo]});\r\n    }\r\n    \r\n    deleteCard = (id, title) => {\r\n        console.log(\"Deleted the card: \" + title)\r\n        this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] });\r\n    }\r\n    \r\n    completeCard = (id, title) => {\r\n        this.setState({ todos: this.state.todos.map(todo => {\r\n            if(todo.id === id){\r\n                todo.completed = !todo.completed\r\n                console.log(this.state.todos)\r\n                console.log(\"Completed the card: \" + title)\r\n                this.setState({completedTodo: [...this.state.completedTodo, todo]});\r\n            }\r\n            return todo;\r\n        })});\r\n        this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] });\r\n    }\r\n\r\nrender(){\r\n  return (\r\n    <div className=\"App\">\r\n        <Title/>\r\n        <Navbar/>\r\n        <main>\r\n            <Modal addTodo={this.addTodo} maxLength=\"50\"/>\r\n            \r\n            <div id=\"todoList\" className=\"todoList\">\r\n            <AllDone todos={this.state.todos}/>\r\n            <TodoCardList todos={this.state.todos} deleteCard={this.deleteCard} completeCard={this.completeCard}/>\r\n            </div>\r\n\r\n            <div>\r\n                <h4>Completed Todos</h4>\r\n                <Search todos={this.state.todos}/>\r\n                <table id=\"fullfoertTodo\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th id=\"completedTitle\">Title</th>\r\n                            <th id=\"completedAuthor\">Author</th>\r\n                            <th>Description</th>\r\n                            <th>Completed Date</th>\r\n                        </tr>\r\n            <CompletedList completedTodos={this.state.completedTodo} />\r\n            </thead>\r\n                    <tbody>\r\n                    \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </main>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}